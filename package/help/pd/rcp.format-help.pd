#N canvas 69 47 620 609 12;
#X obj 74 176 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X floatatom 82 198 5 0 0 0 - - - 0;
#X msg 132 307 getlabel;
#X msg 118 283 label test;
#X obj 66 154 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X msg 90 223 symbol test;
#X obj 145 501 print args;
#X msg 379 278 type t;
#X msg 402 376 gettype;
#X msg 379 322 type f;
#X msg 380 300 type i;
#X msg 379 344 type s;
#X msg 379 256 type b;
#X msg 379 230 type ?;
#X text 14 9 RabbitControl for Pd;
#X text 136 49 - rcpformat;
#X text 398 548 see also:;
#X text 187 222 string packet;
#X text 376 207 choose a type;
#X text 439 255 bang;
#X text 439 277 toggle (boolean);
#X text 439 321 type float;
#X text 439 343 type symbol (string);
#X text 439 229 auto type (default);
#X text 115 262 set a label;
#X msg 257 442 set 2;
#X msg 145 335 clearlabel;
#X text 308 443 set id;
#X text 157 473 optional creation argument: parameter-id default id:
1;
#X text 439 299 type integer;
#X obj 47 49 rcp.format;
#X obj 64 474 rcp.format 3;
#X obj 476 547 rcp.parse;
#X text 45 79 Allows you to format rcp packets independent of a rcp-server.
This can be handy if working with serial connections or similar.;
#X text 93 153 a bang-packet;
#X text 102 175 a boolean-packet;
#X text 131 197 a float-packet;
#X obj 64 524 print rcp_packet;
#X connect 0 0 31 0;
#X connect 1 0 31 0;
#X connect 2 0 31 0;
#X connect 3 0 31 0;
#X connect 4 0 31 0;
#X connect 5 0 31 0;
#X connect 7 0 31 0;
#X connect 8 0 31 0;
#X connect 9 0 31 0;
#X connect 10 0 31 0;
#X connect 11 0 31 0;
#X connect 12 0 31 0;
#X connect 13 0 31 0;
#X connect 25 0 31 0;
#X connect 26 0 31 0;
#X connect 31 0 37 0;
#X connect 31 1 6 0;
