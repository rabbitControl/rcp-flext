#N canvas 72 23 923 1106 12;
#X obj 75 708 rcp.server;
#X msg 140 334 expose i integer;
#X msg 152 356 expose t toggle;
#X obj 387 528 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 387 548 toggle \$1;
#X msg 164 378 expose s mysymbol;
#X msg 474 548 mysymbol test;
#X obj 75 159 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 575 640 remove integer;
#X msg 460 665 remove toggle;
#X msg 575 665 remove mysymbol;
#X floatatom 194 525 5 0 0 0 - - -;
#X msg 292 547 integer \$1;
#X floatatom 292 526 5 0 0 0 - - -;
#X obj 75 839 route update;
#X obj 75 816 list trim;
#X obj 75 884 print server_update;
#X obj 156 862 print server_o;
#X obj 61 915 route group1;
#X obj 61 964 route int1;
#X obj 61 990 print int1;
#X obj 61 940 route g2;
#X floatatom 97 792 5 0 0 0 - - -;
#X text 138 792 parameter id;
#X msg 176 400 expose b mybang;
#X msg 460 690 remove mybang;
#X msg 474 570 mysymbol test\ 123;
#X floatatom 119 765 5 0 0 0 - - -;
#X text 159 765 number of connected clients;
#X msg 115 236 getport;
#X msg 128 312 expose f sensor1;
#X msg 194 547 sensor1 \$1;
#X text 305 313 types:;
#X text 315 332 f: float;
#X text 315 347 i: integer;
#X text 315 363 t: toggle (a boolean);
#X text 315 379 s: symbol (a string);
#X text 315 395 b: bang;
#X msg 460 640 remove sensor1;
#X text 457 618 remove parameter;
#X text 126 274 expose a parameter;
#X text 126 290 expose <type> <group> <group> ... <label>;
#N canvas 29 44 872 550 parameter-in-groups 0;
#X msg 87 129 expose i group1 int1;
#X msg 106 157 expose i group2 int2;
#X floatatom 316 225 5 0 0 0 - - -;
#X msg 317 390 remove group1;
#X msg 649 454 info group1 int1;
#X floatatom 152 225 5 0 0 0 - - -;
#X msg 152 247 group1 int1 \$1;
#X msg 67 101 expose i group1 g2 int1;
#X msg 650 426 info group1 g2 int1;
#X msg 296 342 remove group1 g2 int1;
#X msg 316 247 group1 g2 int1 \$1;
#X obj 67 472 s server;
#X text 65 75 expose parameter in group;
#X text 148 200 setting value;
#X text 293 320 remove a parameter in a group;
#X text 315 369 remove a group including all parameters;
#X text 647 402 parameter information;
#X connect 0 0 11 0;
#X connect 1 0 11 0;
#X connect 2 0 10 0;
#X connect 3 0 11 0;
#X connect 4 0 11 0;
#X connect 5 0 6 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X restore 492 759 pd parameter-in-groups;
#N canvas 116 93 597 766 min-max-and-info 0;
#X msg 81 255 setmin group1 g2 int1 0;
#X msg 93 280 setmax group1 g2 int1 100;
#X msg 125 308 min group1 g2 int1;
#X msg 125 332 max group1 g2 int1;
#X msg 77 548 value group1 g2 int1;
#X msg 100 600 id group1 g2 int1;
#X msg 123 653 type group1 g2 int1;
#X obj 78 428 s server;
#X msg 78 99 setmin sensor1 0;
#X msg 93 122 setmax sensor1 1;
#X text 77 71 set min and max;
#X text 271 114 get min and max;
#X msg 273 141 max sensor1;
#X msg 372 141 min sensor1;
#X text 78 229 groups;
#X obj 78 159 s server;
#X obj 77 693 s server;
#X text 74 526 get value;
#X text 73 488 get inforamtion about parameters;
#X text 100 579 get id;
#X text 123 632 get type;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 16 0;
#X connect 5 0 16 0;
#X connect 6 0 16 0;
#X connect 8 0 15 0;
#X connect 9 0 15 0;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X restore 491 849 pd min-max-and-info;
#X obj 491 982 pdcontrol;
#X msg 491 939 browse http://client.rabbitcontrol.cc/#127.0.0.1:10000
;
#X msg 610 964 browse http://client.rabbitcontrol.cc;
#X text 489 918 open the webclient and connect to localhost:100000
;
#N canvas 120 153 596 694 rabbithole 0;
#X text 43 22 Rabbithole allows you to access your parameters over
the internet.;
#X obj 46 94 pdcontrol;
#X msg 46 69 browse https://rabbithole.rabbitcontrol.cc;
#X obj 46 621 pdcontrol;
#X msg 46 572 browse https://rabbithole.rabbitcontrol.cc/client/index.html#pd_test
;
#X text 74 355 Be aware that public tunnels are limited and for testing
purpose only. You can register a user-account and get access to private
tunnels.;
#X text 45 471 Next \, open rabbithole.rabbitcontrol.cc in your browser
\, set the public tunnel name to pd_test and click "Open Webclient".
The client should open and you should see the exposed parameters.;
#X text 45 551 Open the client directly:;
#X msg 46 222 expose f sensor2;
#X msg 59 244 expose i integer2;
#X text 43 195 expose some parameters;
#X obj 46 410 print from_rabbithole;
#X text 44 154 Create a rcp.server with a rabbithole endpoint to a
public tunnel (or use private tunnel with an rabbithole account):;
#X obj 46 305 rcp.server @rabbithole wss://rabbithole.rabbitcontrol.cc/public/rcpserver/connect?key=pd_test
;
#X msg 113 275 listen 20000;
#X text 213 275 start server on port 20000;
#X connect 2 0 1 0;
#X connect 4 0 3 0;
#X connect 8 0 13 0;
#X connect 9 0 13 0;
#X connect 13 0 11 0;
#X connect 14 0 13 0;
#X restore 491 879 pd rabbithole;
#N canvas 154 100 479 370 parameter-info 0;
#X msg 97 148 value group1 g2 int1;
#X msg 120 200 id group1 g2 int1;
#X msg 143 253 type group1 g2 int1;
#X obj 47 293 s server;
#X text 94 126 get value;
#X text 120 179 get id;
#X text 143 232 get type;
#X msg 47 83 info sensor1;
#X text 43 28 get information about parameters;
#X text 43 50 output: info <groups-label-list> <value> <id> <type>
;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 7 0 3 0;
#X restore 491 819 pd parameter-info;
#X obj 731 690 r server;
#X text 459 759 -->;
#X text 459 789 -->;
#X text 459 849 -->;
#X text 459 879 -->;
#X text 97 157 output server information;
#X msg 91 184 listen 10000;
#X msg 101 207 listen 0;
#X text 172 208 (0 or negative number to close);
#X text 177 236 get port currently listening to;
#X text 189 185 listen message to set or change port;
#X msg 646 548 mybang;
#N canvas 85 102 696 232 parameter-options 0;
#X msg 71 97 readonly sensor1;
#X obj 56 138 s server;
#X text 53 38 readonly;
#X msg 56 73 setreadonly sensor1 1;
#X msg 301 117 order sensor1;
#X obj 290 158 s server;
#X text 287 38 order;
#X msg 290 93 setorder sensor1 \$1;
#X msg 463 93 setorder integer \$1;
#X obj 290 73 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 463 73 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X connect 0 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X connect 7 0 5 0;
#X connect 8 0 5 0;
#X connect 9 0 7 0;
#X connect 10 0 8 0;
#X restore 491 789 pd parameter-options;
#X text 459 819 -->;
#X obj 142 739 print server_info;
#X text 191 438 expose with options;
#X msg 192 459 expose f g1 g2 sensor @min 0 @max 10 @order 3 @readonly
;
#X text 14 9 RabbitControl for Pd;
#X obj 47 49 rcp.server;
#X text 136 49 - rcp server;
#X text 47 1053 see also:;
#X obj 125 1052 rcp.client;
#X text 190 503 set value;
#X text 47 83 Rabbitcontrol allows you to expose values (parameters)
to be controlled by a remote system in an easy way. rcp-clients receive
the exposed parameters and can control their values.;
#X connect 0 0 15 0;
#X connect 0 1 22 0;
#X connect 0 2 27 0;
#X connect 0 3 64 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 11 0 31 0;
#X connect 12 0 0 0;
#X connect 13 0 12 0;
#X connect 14 0 16 0;
#X connect 14 0 18 0;
#X connect 14 1 17 0;
#X connect 15 0 14 0;
#X connect 18 0 21 0;
#X connect 19 0 20 0;
#X connect 21 0 19 0;
#X connect 24 0 0 0;
#X connect 25 0 0 0;
#X connect 26 0 0 0;
#X connect 29 0 0 0;
#X connect 30 0 0 0;
#X connect 31 0 0 0;
#X connect 38 0 0 0;
#X connect 45 0 44 0;
#X connect 46 0 44 0;
#X connect 50 0 0 0;
#X connect 56 0 0 0;
#X connect 57 0 0 0;
#X connect 61 0 0 0;
#X connect 66 0 0 0;
